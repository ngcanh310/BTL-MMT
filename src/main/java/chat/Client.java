/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package chat;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket; 
import javax.swing.DefaultListModel;
import javax.swing.SpinnerNumberModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author ngca
 */
public class Client extends javax.swing.JFrame {
    Socket socket;
    DataOutputStream output;
    DataInputStream input;
    DefaultListModel model;
    /**
     * Creates new form NSOChatClient
     */
    private int kiem = 1;    
    private int tieu = 1;
    private int quat = 1;
    private int dao = 1;
    private int cung = 1;
    private int kunai = 1;
    
    public int getKiem(){
        return this.kiem;
    }
    public int getTieu(){
        return this.tieu;
    }
    public int getQuat(){
        return this.quat;
    }
    public int getDao(){
        return this.dao;
    }
    public int getCung(){
        return this.cung;
    }
    public int getKu(){
        return this.kunai;
    }
    public void setKiem(int kiem){
        this.kiem = kiem;
    }
    public void setTieu(int tieu){
        this.tieu= tieu;
    }
    public void setDao(int tieu){
        this.dao= tieu;
    }
    public void setCung(int tieu){
        this.cung= tieu;
    }
    public void setKu(int tieu){
        this.kunai= tieu;
    }
    public void setQuat(int tieu){
        this.quat= tieu;
    }
    
    public Client() {
        initComponents();
        model = new javax.swing.DefaultListModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        this.setTitle("NSO Chat");
        this.setSize(700, 700);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        qttItem = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsHistory = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMess = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lsItem = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        qttKunai = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        qttKiem = new javax.swing.JLabel();
        qttTieu = new javax.swing.JLabel();
        qttQuat = new javax.swing.JLabel();
        qttDao = new javax.swing.JLabel();
        qttCung = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/items/kunai.png"))); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));

        btnSend.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSend.setText("Gửi");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/items/kiem.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/items/quat.png"))); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Vai trò: Khách");

        txtPort.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPort.setText("Nhập mã phòng");

        btnStart.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnStart.setText("Tìm phòng");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tìm phòng: ");

        jScrollPane1.setViewportView(lsHistory);

        txtMess.setColumns(20);
        txtMess.setRows(3);
        jScrollPane2.setViewportView(txtMess);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/items/tieu.png"))); // NOI18N
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/items/dao.png"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));

        lsItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa chọn", "Kiếm Doujigiri Yasutsuna", "Phi Tiêu Shuriken", "Quạt ba tiêu", "Đao hải tặc", "Cung phong ấn", "Kunai" }));
        lsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lsItemActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/items/cung.png"))); // NOI18N
        jLabel7.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));

        qttKunai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        qttKunai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qttKunai.setText(String.valueOf(kunai));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("x");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("x");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("x");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("x");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("x");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("x");

        qttKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        qttKiem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qttKiem.setText(String.valueOf(kiem));

        qttTieu.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        qttTieu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qttTieu.setText(String.valueOf(tieu));

        qttQuat.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        qttQuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qttQuat.setText(String.valueOf(quat));

        qttDao.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        qttDao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qttDao.setText(String.valueOf(dao));

        qttCung.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        qttCung.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qttCung.setText(String.valueOf(cung));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(qttCung, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(qttDao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(qttQuat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(qttTieu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(qttKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(qttKunai, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnStart))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lsItem, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(qttItem, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStart)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel9)
                                                        .addComponent(qttKiem))
                                                    .addGap(42, 42, 42))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel10)
                                                    .addComponent(qttTieu)))
                                            .addGap(41, 41, 41))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11)
                                            .addComponent(qttQuat)))
                                    .addGap(44, 44, 44))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(qttDao)))
                            .addGap(40, 40, 40))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(qttCung)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6)
                            .addGap(12, 12, 12)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(qttKunai)
                                    .addComponent(jLabel14))
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(18, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lsItem, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(qttItem)))
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        SpinnerNumberModel qttItemModel = new SpinnerNumberModel(0, 0, 200, 1);
        qttItem.setModel(qttItemModel);

        lsItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedItem = (String) lsItem.getSelectedItem();
                int maxLimit = 200;
                if ("Kiếm Doujigiri Yasutsuna".equals(selectedItem)) {
                    maxLimit = kiem; // Sử dụng giá trị kiem cho giới hạn
                } else if ("Phi Tiêu Shuriken".equals(selectedItem)) {
                    maxLimit = tieu; // Sử dụng giá trị tieu cho giới hạn
                } else if ("Quạt ba tiêu".equals(selectedItem)) {
                    maxLimit = quat; // Sử dụng giá trị quat cho giới hạn
                } else if ("Đao hải tặc".equals(selectedItem)) {
                    maxLimit = dao; // Sử dụng giá trị dao cho giới hạn
                } else if ("Cung phong ấn".equals(selectedItem)) {
                    maxLimit = cung; // Sử dụng giá trị cung cho giới hạn
                } else if ("Kunai".equals(selectedItem)) {
                    maxLimit = kunai; // Sử dụng giá trị kunai cho giới hạn
                } else {
                    maxLimit = 0;
                }
                // Cập nhật giá trị tối đa cho qttItem
                qttItemModel.setMaximum(maxLimit);
            }
        });
        lsItem.setSelectedItem("Chưa chọn");

        pack();
    }// </editor-fold>                        

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {                                        
        try{
            output = new DataOutputStream(socket.getOutputStream());
            String selectedItem = (String) lsItem.getSelectedItem();
            if(selectedItem.equals("Chưa chọn")){
                
            }
            else{
                int qttValue = (int) qttItem.getValue();
                String combinedData = "trade:"+selectedItem + "," + qttValue;
                output.writeUTF(combinedData);
                int ok=0;
                if ("Kiếm Doujigiri Yasutsuna".equals(selectedItem) && this.getKiem() >= qttValue) {
                    kiem -= qttValue;
                    ok=1;
                    qttKiem.setText(String.valueOf(kiem));
                } else if ("Phi Tiêu Shuriken".equals(selectedItem) && this.getTieu() >= qttValue) {
                    tieu -= qttValue;
                    ok=1;
                    qttTieu.setText(String.valueOf(tieu));
                } else if ("Quạt ba tiêu".equals(selectedItem) && this.getQuat() >= qttValue) {
                    quat -= qttValue;
                    ok=1;
                    qttQuat.setText(String.valueOf(quat));
                } else if ("Đao hải tặc".equals(selectedItem) && this.getDao() >= qttValue) {
                    dao -= qttValue;
                    ok=1;
                    qttDao.setText(String.valueOf(dao));
                } else if ("Cung phong ấn".equals(selectedItem) && this.getCung() >= qttValue) {
                    cung -= qttValue;
                    ok=1;
                    qttCung.setText(String.valueOf(cung));
                } else if ("Kunai".equals(selectedItem) && this.getKu() >= qttValue) {
                    kunai -= qttValue;
                    ok=1;
                    qttKunai.setText(String.valueOf(kunai));
                }   
                if(qttValue > 0 && ok==1) model.addElement("Bạn Đã gửi "+qttValue+" "+selectedItem+"!");
                lsHistory.setModel(model);              
            }
            if(!txtMess.getText().isEmpty()){
                output.writeUTF(txtMess.getText());
                model.addElement("Bạn: "+txtMess.getText());
                lsHistory.setModel(model);
                txtMess.setText("");
            }
            output.flush();
        }catch(Exception e){}
    }                                       

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try{
            model.addElement("Đang tìm phòng");
            lsHistory.setModel(model);
            socket = new Socket("localhost", Integer.parseInt(txtPort.getText()));
            model.addElement("Đã tạo phòng trao đổi đồ thành công");
            lsHistory.setModel(model);
            
            ClientHandler clientHandler = new ClientHandler(socket, model);
            Thread t = new Thread(clientHandler);
            t.start();
        }catch(Exception e){
        }
    }                                        

    private void lsItemActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lsHistory;
    private javax.swing.JComboBox<String> lsItem;
    private javax.swing.JLabel qttCung;
    private javax.swing.JLabel qttDao;
    private javax.swing.JSpinner qttItem;
    private javax.swing.JLabel qttKiem;
    private javax.swing.JLabel qttKunai;
    private javax.swing.JLabel qttQuat;
    private javax.swing.JLabel qttTieu;
    private javax.swing.JTextArea txtMess;
    private javax.swing.JTextField txtPort;
    // End of variables declaration                   
    public class ClientHandler implements Runnable {
    private Socket socket;
    private DefaultListModel model;

    public ClientHandler(Socket socket, DefaultListModel model) {
        this.socket = socket;
        this.model = model;
    }

    @Override
    public void run() {
        try {
            DataInputStream input = new DataInputStream(socket.getInputStream());
            while (true) {
                if (socket != null) {
                    String message = input.readUTF();
                    // Thêm tin nhắn từ máy chủ vào danh sách model
                    if(message.startsWith("trade:")){
                        String tradeMessage = message.substring(6);
                        String[] tradeData = tradeMessage.split(",");
                        String itemName = tradeData[0];
                        int itemQuantity = Integer.parseInt(tradeData[1]);
                        if(itemQuantity > 0) model.addElement("Chủ phòng " + itemQuantity +" "+ itemName +" cho bạn !");
                        if ("Kiếm Doujigiri Yasutsuna".equals(itemName)) {
                            kiem += itemQuantity;
                            qttKiem.setText(String.valueOf(kiem));
                        } else if ("Phi Tiêu Shuriken".equals(itemName)) {
                            tieu += itemQuantity;
                            qttTieu.setText(String.valueOf(tieu));
                        } else if ("Quạt ba tiêu".equals(itemName)) {
                            quat += itemQuantity;
                            qttQuat.setText(String.valueOf(quat));
                        } else if ("Đao hải tặc".equals(itemName)) {
                            dao += itemQuantity;
                            qttDao.setText(String.valueOf(dao));
                        } else if ("Cung phong ấn".equals(itemName)) {
                            cung += itemQuantity;
                            qttCung.setText(String.valueOf(cung));
                        } else if ("Kunai".equals(itemName)) {
                            kunai += itemQuantity;
                            qttKunai.setText(String.valueOf(kunai));
                        }
                    }
                    else{
                        model.addElement("Chủ phòng: " + message);
                    }
                }
//                Thread.sleep(1000);
            }
        } catch (Exception e) {
            // Xử lý lỗi
            e.printStackTrace();
        }
    }
}
}
